# Generated by Django 3.2.12 on 2022-08-13 18:16

import core.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('dying', '0009_remove_dyingissuelot_lot_number'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ledgers', '0027_auto_20220813_1816'),
        ('essentials', '0029_auto_20220718_1511'),
        ('rawtransactions', '0020_auto_20220620_1621'),
    ]

    operations = [
        migrations.CreateModel(
            name='RawPurchase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('time_stamp', models.DateTimeField(default=datetime.datetime.now)),
                ('manual_serial', models.PositiveBigIntegerField()),
                ('serial', models.PositiveBigIntegerField()),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='essentials.person')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rawpurchase', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(core.models.NextSerial, models.Model),
        ),
        migrations.CreateModel(
            name='RawPurchaseLot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lot_number', models.PositiveBigIntegerField()),
                ('issued', models.BooleanField(default=False)),
                ('raw_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rawtransactions.rawproduct')),
                ('raw_purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_purchase_transaction', to='rawtransactions.rawpurchase')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, core.models.NextSerial),
        ),
        migrations.CreateModel(
            name='RawPurchaseLotDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1e-05)])),
                ('actual_gazaana', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('expected_gazaana', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('formula', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rawtransactions.formula')),
                ('purchase_lot_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_purchase_lot', to='rawtransactions.rawpurchaselot')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='essentials.warehouse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RawSaleAndReturn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('time_stamp', models.DateTimeField(default=datetime.datetime.now)),
                ('manual_serial', models.PositiveBigIntegerField()),
                ('serial', models.PositiveBigIntegerField()),
                ('transaction_type', models.CharField(choices=[('RSUP', 'Raw Purchase'), ('RMWC', 'Return Customer'), ('RMWS', 'Return Supplier')], max_length=10)),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='essentials.person')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rawsaleandreturn', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(core.models.NextSerial, models.Model),
        ),
        migrations.CreateModel(
            name='RawSaleAndReturnLotDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1e-05)])),
                ('actual_gazaana', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('expected_gazaana', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('nature', models.CharField(choices=[('C', 'Credit'), ('D', 'Debit')], default='D', max_length=1)),
                ('formula', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rawtransactions.formula')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RawSaleAndReturnWithPurchaseLotRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('purchase_lot_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rawtransactions.rawpurchaselot')),
                ('sale_and_return', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rawtransactions.rawsaleandreturn')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='rawdebitlot',
            name='bill_number',
        ),
        migrations.RemoveField(
            model_name='rawdebitlot',
            name='lot_number',
        ),
        migrations.RemoveField(
            model_name='rawdebitlotdetail',
            name='formula',
        ),
        migrations.RemoveField(
            model_name='rawdebitlotdetail',
            name='return_lot',
        ),
        migrations.RemoveField(
            model_name='rawdebitlotdetail',
            name='warehouse',
        ),
        migrations.RemoveField(
            model_name='rawlotdetail',
            name='formula',
        ),
        migrations.RemoveField(
            model_name='rawlotdetail',
            name='lot_number',
        ),
        migrations.RemoveField(
            model_name='rawlotdetail',
            name='warehouse',
        ),
        migrations.RemoveField(
            model_name='rawtransaction',
            name='person',
        ),
        migrations.RemoveField(
            model_name='rawtransaction',
            name='user',
        ),
        migrations.RemoveField(
            model_name='rawtransactionlot',
            name='raw_product',
        ),
        migrations.RemoveField(
            model_name='rawtransactionlot',
            name='raw_transaction',
        ),
        migrations.DeleteModel(
            name='RawDebit',
        ),
        migrations.DeleteModel(
            name='RawDebitLot',
        ),
        migrations.DeleteModel(
            name='RawDebitLotDetail',
        ),
        migrations.DeleteModel(
            name='RawLotDetail',
        ),
        migrations.DeleteModel(
            name='RawTransaction',
        ),
        migrations.DeleteModel(
            name='RawTransactionLot',
        ),
        migrations.AddField(
            model_name='rawsaleandreturnlotdetail',
            name='sale_and_return_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rawtransactions.rawsaleandreturnwithpurchaselotrelation'),
        ),
        migrations.AddField(
            model_name='rawsaleandreturnlotdetail',
            name='warehouse',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='essentials.warehouse'),
        ),
    ]
