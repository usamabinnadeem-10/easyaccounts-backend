# Generated by Django 3.2.12 on 2022-08-14 19:26

import core.models
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('essentials', '0029_auto_20220718_1511'),
        ('rawtransactions', '0022_alter_rawsaleandreturn_transaction_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='RawStockTransfer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('time_stamp', models.DateTimeField(default=datetime.datetime.now)),
                ('serial', models.PositiveBigIntegerField()),
                ('manual_serial', models.PositiveBigIntegerField()),
                ('from_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='essentials.warehouse')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, core.models.NextSerial),
        ),
        migrations.CreateModel(
            name='RawStockTransferAndLotRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('purchase_lot_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rawtransactions.rawpurchaselot')),
                ('raw_transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rawtransactions.rawstocktransfer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='rawpurchaselotdetail',
            name='actual_gazaana',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(1e-05)]),
        ),
        migrations.AlterField(
            model_name='rawpurchaselotdetail',
            name='expected_gazaana',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(1e-05)]),
        ),
        migrations.AlterField(
            model_name='rawpurchaselotdetail',
            name='rate',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(1e-05)]),
        ),
        migrations.AlterField(
            model_name='rawsaleandreturnlotdetail',
            name='actual_gazaana',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(1e-05)]),
        ),
        migrations.AlterField(
            model_name='rawsaleandreturnlotdetail',
            name='expected_gazaana',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(1e-05)]),
        ),
        migrations.AlterField(
            model_name='rawsaleandreturnlotdetail',
            name='rate',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(1e-05)]),
        ),
        migrations.CreateModel(
            name='RawStockTransferLotDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1e-05)])),
                ('actual_gazaana', models.FloatField(validators=[django.core.validators.MinValueValidator(1e-05)])),
                ('expected_gazaana', models.FloatField(validators=[django.core.validators.MinValueValidator(1e-05)])),
                ('formula', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rawtransactions.formula')),
                ('raw_stock_transfer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rawtransactions.rawstocktransferandlotrelation')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='essentials.warehouse')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
