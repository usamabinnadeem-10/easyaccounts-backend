# Generated by Django 3.2.12 on 2022-03-30 08:13

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0004_alter_userbranchrelation_role'),
        ('essentials', '0012_auto_20220319_2025'),
        ('rawtransactions', '0005_alter_rawproduct_unique_together'),
    ]

    operations = [
        migrations.CreateModel(
            name='RawReturn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('manual_invoice_serial', models.PositiveBigIntegerField()),
                ('bill_num', models.PositiveBigIntegerField()),
                ('date', models.DateField(default=datetime.date.today)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rawreturn', to='authentication.branch')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RawReturnLot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bill_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rawtransactions.rawreturn')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rawreturnlot', to='authentication.branch')),
                ('lot_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rawtransactions.rawtransactionlot')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='rawlotdetail',
            name='nature',
        ),
        migrations.AlterField(
            model_name='rawlotdetail',
            name='actual_gazaana',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)]),
        ),
        migrations.AlterField(
            model_name='rawlotdetail',
            name='expected_gazaana',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)]),
        ),
        migrations.AlterField(
            model_name='rawlotdetail',
            name='quantity',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1.0)]),
        ),
        migrations.AlterField(
            model_name='rawlotdetail',
            name='rate',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)]),
        ),
        migrations.AlterUniqueTogether(
            name='rawproductopeningstock',
            unique_together={('product', 'gazaana', 'branch')},
        ),
        migrations.AlterUniqueTogether(
            name='rawtransaction',
            unique_together={('manual_invoice_serial', 'branch')},
        ),
        migrations.CreateModel(
            name='RawReturnLotDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('actual_gazaana', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('expected_gazaana', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0)])),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rawreturnlotdetail', to='authentication.branch')),
                ('formula', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rawtransactions.formula')),
                ('return_lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rawtransactions.rawreturnlot')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='essentials.warehouse')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
